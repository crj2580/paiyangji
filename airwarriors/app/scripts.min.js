/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	window.onload = function () {
	    cc.game.onStart = function () {
	
	        //cc.path.pathStr = "cocos2d";
	        // Pass true to enable retina display, disabled by default to improve performance
	
	        //cc.view.enableRetina(false);
	        // Adjust viewport meta
	        cc.view.adjustViewPort(true);
	        // Setup the resolution policy and design resolution size
	        cc.view.setDesignResolutionSize(320, 568, cc.ResolutionPolicy.FIXED_WIDTH);
	        // The game will be resized when browser size change
	        cc.view.resizeWithBrowserSize(true);
	
	        //load resources
	        cc.LoaderScene.preload(g_mainmenu, function () {
	            // var MyScene = cc.Scene.extend({
	            //     onEnter: function () {
	            //         this._super();
	            //         var size = cc.director.getWinSize();
	            //         var bg = cc.Sprite.create(res.BackGround_jpg);
	            //         bg.setPosition(size.width / 2, size.height / 2);
	            //         this.addChild(bg);
	            //
	            //         var sprite = cc.Sprite.create(res.Logo_png);
	            //         sprite.setPosition(size.width / 2, size.height-sprite.height/2);
	            //         sprite.setScale(0.8);
	            //         this.addChild(sprite, 0);
	            //
	            //         sprite.runAction(cc.spawn(cc.rotateBy(1, 360, 360), cc.sequence(cc.scaleTo(1, 2), cc.scaleTo(1, 1))).repeatForever());
	            //
	            //         var label = cc.LabelTTF.create("William Wu", "Arial", 40);
	            //         label.setPosition(size.width / 2, size.height/2);
	            //         this.addChild(label, 1);
	            //     }
	            // });
	            cc.spriteFrameCache.addSpriteFrames(res.displayTexturePack_plist);
	            cc.spriteFrameCache.addSpriteFrames(res.textureTransparentPack_plist);
	            cc.director.runScene(SysMenu.scene());
	            //cc.director.runScene(new StartScene());
	        }, this);
	    };
	    cc.game.run("gameCanvas");
	};

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNTMwMTJlZTkzMzAyNDllN2E3ZWYiLCJ3ZWJwYWNrOi8vLy4vbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUJBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7OztBQ3RDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBUztBQUNUO0FBQ0E7QUFDQSxHIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGlkOiBtb2R1bGVJZCxcbiBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrL2Jvb3RzdHJhcCA1MzAxMmVlOTMzMDI0OWU3YTdlZlxuICoqLyIsIndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBjYy5nYW1lLm9uU3RhcnQgPSBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIC8vY2MucGF0aC5wYXRoU3RyID0gXCJjb2NvczJkXCI7XHJcbiAgICAgICAgLy8gUGFzcyB0cnVlIHRvIGVuYWJsZSByZXRpbmEgZGlzcGxheSwgZGlzYWJsZWQgYnkgZGVmYXVsdCB0byBpbXByb3ZlIHBlcmZvcm1hbmNlXHJcblxyXG4gICAgICAgIC8vY2Mudmlldy5lbmFibGVSZXRpbmEoZmFsc2UpO1xyXG4gICAgICAgIC8vIEFkanVzdCB2aWV3cG9ydCBtZXRhXHJcbiAgICAgICAgY2Mudmlldy5hZGp1c3RWaWV3UG9ydCh0cnVlKTtcclxuICAgICAgICAvLyBTZXR1cCB0aGUgcmVzb2x1dGlvbiBwb2xpY3kgYW5kIGRlc2lnbiByZXNvbHV0aW9uIHNpemVcclxuICAgICAgICBjYy52aWV3LnNldERlc2lnblJlc29sdXRpb25TaXplKDMyMCwgNTY4LCBjYy5SZXNvbHV0aW9uUG9saWN5LkZJWEVEX1dJRFRIKTtcclxuICAgICAgICAvLyBUaGUgZ2FtZSB3aWxsIGJlIHJlc2l6ZWQgd2hlbiBicm93c2VyIHNpemUgY2hhbmdlXHJcbiAgICAgICAgY2Mudmlldy5yZXNpemVXaXRoQnJvd3NlclNpemUodHJ1ZSk7XHJcblxyXG4gICAgICAgIC8vbG9hZCByZXNvdXJjZXNcclxuICAgICAgICBjYy5Mb2FkZXJTY2VuZS5wcmVsb2FkKGdfbWFpbm1lbnUsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gdmFyIE15U2NlbmUgPSBjYy5TY2VuZS5leHRlbmQoe1xyXG4gICAgICAgICAgICAvLyAgICAgb25FbnRlcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMuX3N1cGVyKCk7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdmFyIHNpemUgPSBjYy5kaXJlY3Rvci5nZXRXaW5TaXplKCk7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdmFyIGJnID0gY2MuU3ByaXRlLmNyZWF0ZShyZXMuQmFja0dyb3VuZF9qcGcpO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIGJnLnNldFBvc2l0aW9uKHNpemUud2lkdGggLyAyLCBzaXplLmhlaWdodCAvIDIpO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMuYWRkQ2hpbGQoYmcpO1xyXG4gICAgICAgICAgICAvL1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHZhciBzcHJpdGUgPSBjYy5TcHJpdGUuY3JlYXRlKHJlcy5Mb2dvX3BuZyk7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgc3ByaXRlLnNldFBvc2l0aW9uKHNpemUud2lkdGggLyAyLCBzaXplLmhlaWdodC1zcHJpdGUuaGVpZ2h0LzIpO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHNwcml0ZS5zZXRTY2FsZSgwLjgpO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMuYWRkQ2hpbGQoc3ByaXRlLCAwKTtcclxuICAgICAgICAgICAgLy9cclxuICAgICAgICAgICAgLy8gICAgICAgICBzcHJpdGUucnVuQWN0aW9uKGNjLnNwYXduKGNjLnJvdGF0ZUJ5KDEsIDM2MCwgMzYwKSwgY2Muc2VxdWVuY2UoY2Muc2NhbGVUbygxLCAyKSwgY2Muc2NhbGVUbygxLCAxKSkpLnJlcGVhdEZvcmV2ZXIoKSk7XHJcbiAgICAgICAgICAgIC8vXHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdmFyIGxhYmVsID0gY2MuTGFiZWxUVEYuY3JlYXRlKFwiV2lsbGlhbSBXdVwiLCBcIkFyaWFsXCIsIDQwKTtcclxuICAgICAgICAgICAgLy8gICAgICAgICBsYWJlbC5zZXRQb3NpdGlvbihzaXplLndpZHRoIC8gMiwgc2l6ZS5oZWlnaHQvMik7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5hZGRDaGlsZChsYWJlbCwgMSk7XHJcbiAgICAgICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgICAgIC8vIH0pO1xyXG4gICAgICAgICAgICBjYy5zcHJpdGVGcmFtZUNhY2hlLmFkZFNwcml0ZUZyYW1lcyhyZXMuZGlzcGxheVRleHR1cmVQYWNrX3BsaXN0KTtcclxuICAgICAgICAgICAgY2Muc3ByaXRlRnJhbWVDYWNoZS5hZGRTcHJpdGVGcmFtZXMocmVzLnRleHR1cmVUcmFuc3BhcmVudFBhY2tfcGxpc3QpO1xyXG4gICAgICAgICAgICBjYy5kaXJlY3Rvci5ydW5TY2VuZShTeXNNZW51LnNjZW5lKCkpO1xyXG4gICAgICAgICAgICAvL2NjLmRpcmVjdG9yLnJ1blNjZW5lKG5ldyBTdGFydFNjZW5lKCkpO1xyXG4gICAgICAgIH0sIHRoaXMpO1xyXG4gICAgfTtcclxuICAgIGNjLmdhbWUucnVuKFwiZ2FtZUNhbnZhc1wiKTtcclxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vbWFpbi5qc1xuICoqIG1vZHVsZSBpZCA9IDBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=